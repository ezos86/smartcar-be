openapi: 3.0.0
info:
  title: Smartcar Challenge API
  description: Api for the Smartcar challenge
  version: 0.1.9
servers:
  - url: https://smartcar.smartass.io
    description: Production Server
  - url: http://localhost:8001
    description: Localhost Server
paths:
  /cars:
    post:
      summary: Creates a new car.
      description: Creates a new car.
      requestBody:
        description: Car Information.
        required: true
        x-name: data
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                make:
                  type: string
                model:
                  type: string
                color:
                  type: string
      responses:
        '200':
          description: JSON object that contains Hubs
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
        '400':
          description: Request object or parameters are invalid.
        '404':
          description: Entity matching request parameters was not found.
        default:
          description: Unexpected server error.
    get:
      summary: Returns all cars.
      description: Will return all cars.
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string
  /cars/{id}:
    get:
      summary: Returns a car.
      description: Optional extended description in CommonMark or HTML.
      parameters:
        - in: path
          name: id
          type: boolean
          schema:
            type: boolean
          required: true
          description: ID of the car
          example: 22
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string